---
title: "ltd_analysis"
format: html
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, messages=FALSE, warning=FALSE, fig.align = 'center')
```

```{r}
library(tidyverse)
library(readxl)
library(kableExtra)
library(ggplot2)
library(scales)
library(corrplot)
library(stats)
library(fpp3)
```

```{r}
ltd_agg <- read_excel("data/LTD data aggregate.xlsx")
ltd_unit <- read_excel("data/LTD unit records summary.xlsx")
```

# Data wrangling

## ltd data aggregate

### Handling missing values

```{r, results = 'asis'}
null <- data.frame(colSums(is.na(ltd_agg)))
colnames(null) <- c( "Number of null values")

# Creating a scrollable HTML table
html_null_table <- kable(null, "html") %>%
  kable_styling(full_width = FALSE) %>%
  as.character()

# Creating scrollable div
html_null_output <- paste0(
  '<div style="max-height: 400px; overflow-y: auto;" id="NumericVar">',
  '<p>Null values for each variable</p>',
  html_null_table,
  '</div>'
)

cat(html_null_output)
```

There are 193 missing values in `lending` variable. This is because the ABS value of new lending finance in Victoria only 
available from 2002. It also has *one-month reporting lag.* Therefore, **no** missing values handling required.

However, when fitting model incorporating with `lending`, missing values may need to be omitted.

### Convert data types

```{r}
data.frame(sapply(ltd_agg, class))[1,]
```

All variables are already in appropriate format, and thus no further action required.


## ltd unit records

### Handling missing values

```{r, results = 'asis'}
null <- data.frame(colSums(is.na(ltd_unit)))
colnames(null) <- c( "Number of null values")

# Creating a scrollable HTML table
html_null_table <- kable(null, "html") %>%
  kable_styling(full_width = FALSE) %>%
  as.character()

# Creating scrollable div
html_null_output <- paste0(
  '<div style="max-height: 400px; overflow-y: auto;" id="NumericVar">',
  '<p>Null values for each variable</p>',
  html_null_table,
  '</div>'
)

cat(html_null_output)
```

There are no missing values in this dataset.

### Convert data types

```{r}
data.frame(sapply(ltd_unit, class))[1,]
```

All variables are already in appropriate format, and thus no further action required.


# Data Exploration

## ltd_agg

### Summary Statistics

```{r, results='asis'}
# Create an empty dataframe to store results
numerical_summary <- data.frame(
  Variable = character(0),
  Min = numeric(0),
  Quartile_1 = numeric(0),
  Median = numeric(0),
  Mean = numeric(0),
  Quartile_3 = numeric(0),
  Max = numeric(0),
  stringsAsFactors = FALSE
)

# Create summary statistics table for numerical variables
for (i in 2:ncol(ltd_agg)) {
  options(scipen = 999)
  x <- ltd_agg[, i]
  
  # Calculate summary statistics using summary()
  summary_result <- summary(x)
  
  # Define a regular expression pattern to match the numeric value
  pattern <- "-?\\d+\\.?\\d*"
  
  # Create a data frame for the current numerical variable
  result_df <- data.frame(
    Variable = names(x),
    Min = regmatches(summary_result[1], gregexpr(pattern, summary_result[1], perl=TRUE))[[1]],
    Quartile_1 = regmatches(summary_result[2], gregexpr(pattern, summary_result[2],perl=TRUE))[[1]][2],
    Median = regmatches(summary_result[3], gregexpr(pattern, summary_result[3], perl=TRUE))[[1]],
    Mean = regmatches(summary_result[4], gregexpr(pattern, summary_result[4], perl=TRUE))[[1]],
    Quartile_3 = regmatches(summary_result[5], gregexpr(pattern, summary_result[5],perl=TRUE))[[1]][2],
    Max = regmatches(summary_result[6], gregexpr(pattern, summary_result[6], perl=TRUE))[[1]],
    stringsAsFactors = FALSE
  )
  
  # Bind the result to the summary dataframe
  numerical_summary <- rbind(numerical_summary, result_df)
  options(scipen = 0)
}

# Set row names to be the names of the numerical variables
rownames(numerical_summary) <- numerical_summary$Variable
numerical_summary <- numerical_summary[, -1]

# Creating a scrollable HTML table
html_numerical_table <- kable(numerical_summary, "html") %>%
  kable_styling(full_width = FALSE) %>%
  as.character()

# Creating scrollable div
html_numerical_output <- paste0(
  '<div style="max-height: 400px; overflow-y: auto;" id="NumericVar">',
  '<p>Summary statistics of ltd aggregate data features</p>',
  html_numerical_table,
  '</div>'
)

cat(html_numerical_output)
```

Based on the summary statistics, these are some insights:

1. **Loan to Deposit Ratio**:
   - A broad range of the LTD ratio, from approximately 28 million to over 1 billion, suggests significant variability in the funding practices of banks or financial institutions. A higher LTD ratio can indicate that a bank is lending more than it has in deposits, which could be riskier. However, the context of these numbers would need to be clearer since the LTD ratio is typically expressed as a percentage rather than in monetary values. The mention of such large numbers could imply these are aggregated or scaled values rather than direct ratios.
   
   
2. **Predictor variable**:
   - **HVI (Home Value Index)**: Reflects the price movement of residential properties. It ranges from 22.45 to 192.41, indicating a wide variation in home values over time or across different areas within Victoria. The median value is significantly lower than the mean, suggesting a right-skewed distribution with higher values pulling the mean up.
   - **Sales**: Represents the volume of sales at the contract date. Similar to HVI, sales volume has a broad range (3,553 to 15,176), indicating periods or areas of low and high activity. The median is closer to the mean, suggesting a more symmetrical distribution compared to HVI.
   - **Interest Rate (int_rate)**: This variable ranges from 4.52% to 17.00%, showing significant fluctuations over time. The mean is higher than the median, indicating a right-skewed distribution, possibly reflecting periods of economic instability or policy changes affecting interest rates.
   - **Lending**: The amount of new lending finance, ranging from $2,173m to $10,594m, with a mean higher than the median, also suggests a right-skewed distribution. This could indicate periods of increased borrowing, possibly associated with higher property values or increased investment activity.
   

3. **Impact of Economic Factors**:
   - **Interest Rates**: The variation in interest rates from 4.52% to 17% is crucial for understanding the LTD ratio dynamics. Higher interest rates can affect borrowers' ability to take out loans, potentially lowering the LTD ratio. Conversely, lower interest rates could encourage borrowing, increasing the LTD ratio.
   - **HVI and Sales**: The Home Value Index and sales volumes directly impact the real estate market's liquidity and, by extension, the banking sector's loan portfolios. A high HVI could lead to increased property lending, affecting the LTD ratio.
   

4. **Temporal and Lag Considerations**: The note that lending data only goes back to 2002 and has a one-month reporting lag compared to other variables suggests temporal alignment and lagged effects need to be considered in any analysis. This could impact how models are structured and how predictive analysis is conducted, especially when trying to forecast future trends in aggregate LTD based on these variables.

### Identify outliers

#### ltd (Loan-to-Deposit)

```{r}
#| label: fig-boxltd
#| fig-cap: "Boxplot for Loan-to-Deposit variable"
label_millions <- function(x) {
  paste0(format(round(x / 1e6, 2), big.mark = ","), "M")
}

ltd_agg %>%
  ggplot(aes(y = ltd)) +
  geom_boxplot() +
  scale_y_continuous(labels = label_millions) +  
  labs(x = "", y = "Value (in millions)", title = "Boxplot for LTD") 
```

@fig-boxltd shows that there are a few outliers for `ltd` at around 1 billion.

#### Predictor variables

##### Home value index

```{r}
#| label: fig-boxhvi
#| fig-cap: "Boxplot for Home Value Index variable"
ltd_agg %>%
  ggplot(aes(y = hvi)) +
  geom_boxplot() + 
  labs(x = "", y = "Value", title = "Boxplot for HVI") 
```

@fig-boxhvi shows that there are no outlier for `hvi` variable.

##### Sales

```{r}
#| label: fig-boxsales
#| fig-cap: "Boxplot for Sales variable"
ltd_agg %>%
  ggplot(aes(y = sales)) +
  geom_boxplot() + 
  labs(x = "", y = "Value", title = "Boxplot for sales") 
```

@fig-boxsales shows that there are 2 outliers for `sales` variable.

##### Interest Rate

```{r}
#| label: fig-boxint
#| fig-cap: "Boxplot for Interest rate variable"
ltd_agg %>%
  ggplot(aes(y = int_rate)) +
  geom_boxplot() + 
  labs(x = "", y = "Percentage", title = "Boxplot for interest rate")
```

@fig-boxint shows that there are multiple interest outliers at the rate ranged from 15% to 17%.

##### Lending

```{r}
#| label: fig-boxlend
#| fig-cap: "Boxplot for Lending variable"
ltd_agg %>%
  ggplot(aes(y = lending)) +
  geom_boxplot() + 
  scale_y_continuous(labels = label_comma()) +  
  labs(x = "", y = "Value (in $ millions)", title = "Boxplot for lending")
```

@fig-boxlend shows that there are a few `lending` outliers at around $10 billions

### Variables Distribution

#### ltd (Loan-to-Deposit)

```{r}
#| label: fig-histltd
#| fig-cap: "Histogram for Loan-to-Deposit"
ltd_agg %>%
  ggplot(aes(x = ltd)) +
  geom_histogram() +
  scale_x_continuous(labels = label_millions) +  
  labs(x = "Values (in millions)", y = "Count", title = "Histogram for LTD") 
```

As indicated by @fig-histltd, mostly values lie on the right end, which means `ltd` is right-skewed. Moreover, values for `ltd` can be separated to different clusters (at $250m, $500m, etc).

#### Predictor variables

##### Home value index

```{r}
#| label: fig-histhvi
#| fig-cap: "Histogram for Home Value Index"
ltd_agg %>%
  ggplot(aes(x = hvi)) +
  geom_histogram() +
  labs(x = "Values", y = "Count", title = "Histogram for HVI") 
```

Similarly, @fig-histhvi indicates there are clusters formed by `hvi` value.

##### Sales

```{r}
#| label: fig-histsales
#| fig-cap: "Histogram for Sales"
ltd_agg %>%
  ggplot(aes(x = sales)) +
  geom_histogram() +
  labs(x = "Values", y = "Count", title = "Histogram for sales") 
```

@fig-histsales shows that the distribution for sales are fairly symmetrical around 9000, with a few outliers at 15000.

##### Interest rate

```{r}
#| label: fig-histint
#| fig-cap: "Histogram for Interest Rate"
ltd_agg %>%
  ggplot(aes(x = int_rate)) +
  geom_histogram() +
  labs(x = "Values", y = "Count", title = "Histogram for int_rate") 
```

@fig-histint shows that the distribution for intert rate does not follow any clear pattern, but mostly clustered on 2 ends.

##### Lending

```{r}
#| label: fig-histlend
#| fig-cap: "Histogram for Lending"
ltd_agg %>%
  ggplot(aes(x = lending)) +
  geom_histogram() +
  labs(x = "Values (in millions)", y = "Count", title = "Histogram for lending") 
```

Similarly, as indicated by @fig-histlend, we can also see some clusters.

We can see most distributions include clusters, which indicates **multimodal distributions.** A distribution with multiple peaks (or clusters) is referred to as multimodal. 

This could due to a few reasons:

1. **Different Subpopulations**: The presence of distinct groups within the dataset. For example, as we are looking at property data, different clusters could represent different types of property (e.g., residential, non-residential) each with its own typical value range for variables like price or size.

2. **Seasonal Variations**: Different clusters may reflect seasonal effects. For example, sales data might show peaks during certain times of the year due to holidays or seasonal buying patterns.

3. **Economic Phases**: Variables like interest rates or lending volumes might cluster around different values due to economic cycles, such as expansion, recession, or recovery phases, reflecting periods of tightening or loosening credit conditions.

We expect to see similar pattern for ltd unit data (`ltd_unit`).

## ltd_unit

### Summary Statistics

```{r, results='asis'}
# Create an empty dataframe to store results
numerical_summary <- data.frame(
  Variable = character(0),
  Min = numeric(0),
  Quartile_1 = numeric(0),
  Median = numeric(0),
  Mean = numeric(0),
  Quartile_3 = numeric(0),
  Max = numeric(0),
  stringsAsFactors = FALSE
)

# Create summary statistics table for numerical variables
for (i in 2:ncol(ltd_unit)) {
  options(scipen = 999)
  x <- ltd_unit[, i]
  
  # Calculate summary statistics using summary()
  summary_result <- summary(x)
  
  # Define a regular expression pattern to match the numeric value
  pattern <- "-?\\d+\\.?\\d*"
  
  # Create a data frame for the current numerical variable
  result_df <- data.frame(
    Variable = names(x),
    Min = regmatches(summary_result[1], gregexpr(pattern, summary_result[1], perl=TRUE))[[1]],
    Quartile_1 = regmatches(summary_result[2], gregexpr(pattern, summary_result[2],perl=TRUE))[[1]][2],
    Median = regmatches(summary_result[3], gregexpr(pattern, summary_result[3], perl=TRUE))[[1]],
    Mean = regmatches(summary_result[4], gregexpr(pattern, summary_result[4], perl=TRUE))[[1]],
    Quartile_3 = regmatches(summary_result[5], gregexpr(pattern, summary_result[5],perl=TRUE))[[1]][2],
    Max = regmatches(summary_result[6], gregexpr(pattern, summary_result[6], perl=TRUE))[[1]],
    stringsAsFactors = FALSE
  )
  
  # Bind the result to the summary dataframe
  numerical_summary <- rbind(numerical_summary, result_df)
  options(scipen = 0)
}

# Set row names to be the names of the numerical variables
rownames(numerical_summary) <- numerical_summary$Variable
numerical_summary <- numerical_summary[, -1]

# Creating a scrollable HTML table
html_numerical_table <- kable(numerical_summary, "html") %>%
  kable_styling(full_width = FALSE) %>%
  as.character()

# Creating scrollable div
html_numerical_output <- paste0(
  '<div style="max-height: 400px; overflow-y: auto;" id="NumericVar">',
  '<p>Summary statistics of ltd unit data features</p>',
  html_numerical_table,
  '</div>'
)

cat(html_numerical_output)
```

Based on the summary statistics, these are some insights:

The summary statistics for the LTD unit records reveal insights about the distribution and characteristics of loan to deposit (LTD) across different sectors (residential, non-residential, commercial, industrial, other, and unknown) as well as the volume of transactions in these sectors. Here's an analysis based on the provided summary:

#### LTD Revenue Analysis

1. **Dominance of Residential Sector**:
   - The residential sector (ltd_res) contributes a significant portion of the total LTD, with amounts ranging from about 238 million to 761 million. This indicates a strong focus or demand in the residential sector, making it a key area for banking and financial services.

2. **Non-Residential Sectors**:
   - The non-residential sector, while smaller than the residential sector, still represents a significant portion of the total LTD, suggesting diverse lending practices that cater to various needs beyond residential.
   - Within non-residential, the commercial sector (ltd_comm) is the largest contributor, followed by industrial (ltd_ind) and then other (mainly agricultural) (ltd_other). This hierarchy reflects the economic structure where commercial activities typically require more financing compared to industrial and agricultural sectors.

3. **Unknown Sector**:
   - The presence of an unknown sector (ltd_unknown) with a maximum LTD value of 8.585 million (`r paste(round(as.numeric(numerical_summary[7,6])/as.numeric(numerical_summary[1,6])*100,2),"%")`), although small compared to other sectors, highlights the importance of improving data collection and classification methods to reduce missing information.

#### Volume of Transactions

1. **Higher Transaction Volume in Residential**:
   - The volume of transactions is significantly higher in the residential sector compared to non-residential sectors. This aligns with the LTD revenue data, underscoring the residential sector's dominance in lending activities.

2. **Non-Residential Transaction Volume**:
   - Similar to the LTD revenue, the commercial sector (volume_comm) sees more activity than industrial (volume_ind) and other (volume_other) sectors within the non-residential category, aligning with its financial contribution.

3. **Low or Unknown Volume**:
   - The volume_unknown category shows transactions did occur in sectors not properly classified, emphasizing again the need for better data management.

#### Insights and Implications

- **Market Focus**: The data underscores the banking sector's focus on residential lending, likely driven by the consistent demand for housing and residential properties. This could also reflect broader economic trends, such as population growth or urbanization.

- **Economic Contributions**: The contributions of commercial and industrial sectors to the LTD and transaction volumes reflect their roles in the economy, with commercial activities leading in financial needs. This might indicate opportunities for banks and financial institutions to further tailor their products and services to these sectors.

### Identify outliers

As commercial, industrial and other are subcategories of non-commercial property, we only plot for non-residential only for neating purpose.

#### Loan to Deposit

##### ltd_total (Loan-to-Deposit)

```{r}
#| label: fig-boxltdtotal
#| fig-cap: "Boxplot for total Loan-to-Deposit"
ltd_unit %>%
  ggplot(aes(y = ltd_total)) +
  geom_boxplot() +
  scale_y_continuous(labels = label_millions) +  
  labs(x = "", y = "Value (in millions)", title = "Boxplot for total LTD") 
```

@fig-boxltdtotal shows that there are a few outliers for `ltd_total` at around 1 billion.

##### ltd_res (Residential)

```{r}
#| label: fig-boxltdres
#| fig-cap: "Boxplot for residential Loan-to-Deposit"
ltd_unit %>%
  ggplot(aes(y = ltd_res)) +
  geom_boxplot() +
  scale_y_continuous(labels = label_millions) +  
  labs(x = "", y = "Value (in millions)", title = "Boxplot for residential LTD") 
```

@fig-boxltdres shows that there are a few outliers for `ltd_res` at above 700m.

##### ltd_nonres (Non-residential)

```{r}
#| label: fig-boxltdnonres
#| fig-cap: "Boxplot for non-residential Loan-to-Deposit"
ltd_unit %>%
  ggplot(aes(y = ltd_nonres)) +
  geom_boxplot() +
  scale_y_continuous(labels = label_millions) +  
  labs(x = "", y = "Value (in millions)", title = "Boxplot for non-residential LTD") 
```

@fig-boxltdnonres shows that there are a few outliers for `ltd_nonres` at approximately 380m.

#### Loan to Deposit Volume

##### volume_total (Total)

```{r}
#| label: fig-boxvoltot
#| fig-cap: "Boxplot for total volume for Loan-to-Deposit"
ltd_unit %>%
  ggplot(aes(y = volume_total)) +
  geom_boxplot() + 
  labs(x = "", y = "Value", title = "Boxplot for total volume of LTD") 
```

@fig-boxvoltot shows that there are 3 outliers for `volume_total` variable.

##### volume_res (Residential)

```{r}
#| label: fig-boxvolres
#| fig-cap: "Boxplot for residential volume for Loan-to-Deposit"
ltd_unit %>%
  ggplot(aes(y = volume_res)) +
  geom_boxplot() + 
  labs(x = "", y = "Value", title = "Boxplot for residential volume of LTD") 
```

@fig-boxvolres shows that there are 3 outliers for `volume_res` variable.

##### volume_nonres (Non-esidential)

```{r}
#| label: fig-boxvolnonres
#| fig-cap: "Boxplot for residential volume for Loan-to-Deposit"
ltd_unit %>%
  ggplot(aes(y = volume_nonres)) +
  geom_boxplot() + 
  labs(x = "", y = "Value", title = "Boxplot for non-residential volume of LTD") 
```

@fig-boxvolnonres shows that there is an outlier for `volume_nonres` variable.

### Variables Distribution

#### Loan to Deposit

##### ltd_total (Loan-to-Deposit)

```{r}
#| label: fig-histltdtot
#| fig-cap: "Histogram for total Loan-to-Deposit"
ltd_unit %>%
  ggplot(aes(x = ltd_total)) +
  geom_histogram() +
  scale_x_continuous(labels = label_millions) +  
  labs(x = "Values (in millions)", y = "Count", title = "Histogram for total LTD") 
```

As indicated by @fig-histltdtot, mostly values lie on the near right end, which means `ltd_total` is right-skewed. Moreover, values for `ltd_total` can be separated to different clusters.

##### ltd_res (Residential)

```{r}
#| label: fig-histltdres
#| fig-cap: "Histogram for residential Loan-to-Deposit"
ltd_unit %>%
  ggplot(aes(x = ltd_res)) +
  geom_histogram() +
  scale_x_continuous(labels = label_millions) +  
  labs(x = "Values (in millions)", y = "Count", title = "Histogram for residential LTD") 
```

Similarly, as indicated by @fig-histltdres, the distribution for `ltd_res` is multimodal.

##### ltd_nonres (Non-residential)

```{r}
#| label: fig-histltdnonres
#| fig-cap: "Histogram for residential Loan-to-Deposit"
ltd_unit %>%
  ggplot(aes(x = ltd_nonres)) +
  geom_histogram() +
  scale_x_continuous(labels = label_millions) +  
  labs(x = "Values (in millions)", y = "Count", title = "Histogram for non-residential LTD") 
```

Similarly, as indicated by @fig-histltdnonres, the distribution for `ltd_nonres` is multimodal but less visible, with one clealy identifiable outlier.

#### Loan to Deposit Volume

##### volume_total (Total)

```{r}
#| label: fig-histvoltot
#| fig-cap: "Histogram for total volume for Loan-to-Deposit"
ltd_unit %>%
  ggplot(aes(x = volume_total)) +
  geom_histogram() +
  labs(x = "Values", y = "Count", title = "Histogram for total volume for ltd") 
```

@fig-histvoltot indicates the total volume is symmetrical with a few outliers on both ends.

##### volume_res (Residential)

```{r}
#| label: fig-histvolres
#| fig-cap: "Histogram for residential volume for Loan-to-Deposit"
ltd_unit %>%
  ggplot(aes(x = volume_res)) +
  geom_histogram() +
  labs(x = "Values", y = "Count", title = "Histogram for residential volume for ltd") 
```

Similarly, @fig-histvolres indicates the distribution is symmetrical.

##### volume_nonres (Non-residential)

```{r}
#| label: fig-histvolnonres
#| fig-cap: "Histogram for residential volume for Loan-to-Deposit"
ltd_unit %>%
  ggplot(aes(x = volume_nonres)) +
  geom_histogram() +
  labs(x = "Values", y = "Count", title = "Histogram for non-residential volume for ltd") 
```

Similarly, @fig-histvolnonres indicates the distribution is symmetrical, with one visible outlier.


# Exploratory Data Analysis (EDA)

## ltd_agg

### Correlation 

```{r}
#| label: fig-corr1
#| fig-cap: "Correlation plot for variables in ltd_agg"

M <- cor(ltd_agg %>%
           select(-Date) %>%
           na.omit())
corrplot(M, method="circle")

```

@fig-corr1 indicates that `ltd` is positively correlated with `hvi`, `sales` and `lending`, while negatively correlated with `int_rate`.

The absolute correlation value between `ltd` and `hvi` and `lending` (`r M[1,2]` and `r M[1,5]`, respectively)  is larger than the other 2 variables (`sales` and `int_rate`), which is `r M[1,3]` and `r abs(M[1,4])`.

We can also see some multicollinearity, e.g. hvi and lending, etc.

### Model fitting

#### Linear Model

```{r}
agg_fit <- lm(ltd ~ ., data = ltd_agg %>% na.omit())
summary(agg_fit)
```

#### time series

```{r}
ltd_agg_ts <- ltd_agg %>% 
  mutate(Month = yearmonth(Date)) |>
  as_tsibble(index = Month) %>%
  select(-Date) %>%
  relocate(Month)
```

```{r}
autoplot(ltd_agg_ts, ltd)

ltd_agg_ts |>
  gg_season(ltd, labels = "both") 
```


## ltd_unit

### Correlation 

```{r}
#| label: fig-corr2
#| fig-cap: "Correlation plot for variables in ltd_unit"
M1 <- cor(ltd_unit %>%
           select(-dd) %>%
           na.omit())
corrplot(M1, method="circle")

```

@fig-corr2 shows that all variables are positively correlated with each other, which is reasonable, ignoring `ltd_unknown` and `volume_unknown`.

### Model fitting

```{r}
ltd_unit_ts <- ltd_unit %>% 
  mutate(Month = yearmonth(dd)) |>
  as_tsibble(index = Month) %>%
  select(-dd) %>%
  relocate(Month)
```

```{r}
combined_data <- left_join(ltd_agg_ts %>% filter(Month >= yearmonth("2013-07-01")), ltd_unit_ts, by = "Month")

# Plotting
ggplot(combined_data, aes(x = Month)) +
  geom_line(aes(y = ltd, color = "LTD")) +
  geom_line(aes(y = ltd_total, color = "LTD Total")) +
  labs(
       x = "Month", y = "Value",
       color = "Series") +
  theme_minimal()
```

```{r}
### seasonal plot

ltd_unit_ts %>%
  gg_season(ltd_total, label = "both")

ltd_unit_ts %>%
  gg_season(ltd_res, label = "both")

ltd_unit_ts %>%
  gg_season(ltd_nonres, label = "both")
```

Drop in April

```{r}
### subseries plot

ltd_unit_ts |>
  gg_subseries(ltd_total)

ltd_unit_ts |>
  gg_subseries(ltd_res)

ltd_unit_ts |>
  gg_subseries(ltd_nonres)
```

Drop in 2022

```{r}
ltd_unit_ts |>
  gg_lag(ltd_total, geom = "point") +
  labs(x = "lag(ltd, k)")
```

The relationship is strongly positive at March (lag3)


```{r}
dcmp <- ltd_unit_ts |>
  model(stl = STL(ltd_total))
components(dcmp)
```

```{r}
## Plot trend component
components(dcmp) |>
  as_tsibble() |>
  autoplot(ltd_total, colour="gray") +
  geom_line(aes(y=trend), colour = "#D55E00") 
```

```{r}
## Plot all components
components(dcmp) |>
  autoplot()
```

```{r}
components(dcmp) |>
  as_tsibble() |>
  autoplot(ltd_total, colour = "gray") +
  geom_line(aes(y=season_adjust), colour = "#0072B2")
```


There is seasonal pattern for `ltd_total` but the large grey bar in the seasonal panel shows that the variation in the seasonal component is smallest compared to the variation in the data.

```{r}
dcmp <- ltd_unit_ts |>
  model(stl = STL(ltd_res))
```

```{r}
## Plot trend component
components(dcmp) |>
  as_tsibble() |>
  autoplot(ltd_res, colour="gray") +
  geom_line(aes(y=trend), colour = "#D55E00") 
```

```{r}
## Plot all components
components(dcmp) |>
  autoplot()
```


