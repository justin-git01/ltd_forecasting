---
title: "ltd_ts_analysis"
format: html
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, messages=FALSE, warning=FALSE, fig.align = 'center')
```

```{r, message=FALSE}
library(tidyverse)
library(readxl)
library(kableExtra)
library(ggplot2)
library(scales)
library(corrplot)
library(stats)
library(fpp3)
```

```{r}
ltd_agg <- read_excel("data/LTD data aggregate.xlsx")
ltd_unit <- read_excel("data/LTD unit records summary.xlsx")
```

```{r}
ltd_clean <- ltd_unit %>%
  select(dd, ltd_res, ltd_comm, ltd_ind, ltd_other) %>%
  # Pivot to long format
  pivot_longer(-dd, names_to = "metric", values_to = "ltd") %>%
  # Separate the metric into type (ltd/volume) and category
  separate(metric, into = c("type", "sub_category"), sep = "_") %>%
  # Adjust category and subcategory assignment
  mutate(category = case_when(
    sub_category == "res" ~ "res", # If category is 'res', it remains 'res'
    sub_category %in% c("comm", "ind", "other") ~ "nonres", # If category is 'comm', 'ind', or 'other', it becomes 'nonres'
    TRUE ~ as.character(sub_category) 
  )) %>%
  select(dd, category, sub_category, ltd)
```

```{r}
volume_clean <- ltd_unit %>%
    select(dd, volume_res, volume_comm, volume_ind, volume_other) %>%
  # Pivot to long format
  pivot_longer(-dd, names_to = "metric", values_to = "volume") %>%
  # Separate the metric into type (ltd/volume) and category
  separate(metric, into = c("type", "sub_category"), sep = "_") %>%
  # Adjust category and subcategory assignment
  mutate(category = case_when(
    sub_category == "res" ~ "res", # If category is 'res', it remains 'res'
    sub_category %in% c("comm", "ind", "other") ~ "nonres", # If category is 'comm', 'ind', or 'other', it becomes 'nonres'
    TRUE ~ as.character(sub_category) 
  )) %>%
  select(dd, category, sub_category, volume)
```

```{r}
final_join <- left_join(ltd_clean, volume_clean, by = c("dd", "category", "sub_category" = "sub_category"))
```

# Convert both data into time series (cross-sectional hierarchical time series)

```{r}
ltd_agg_ts <- ltd_agg %>% 
  mutate(Month = yearmonth(Date)) |>
  as_tsibble(index = Month) %>%
  select(-Date) %>%
  relocate(Month)
```

```{r}
ltd_unit_ts <- final_join %>% 
  mutate(month = yearmonth(dd)) |>
  select(-dd) |>
  as_tsibble(key = c(category, sub_category),
             index = month) |>
  relocate(month)
```

# Analysing trend, seasonal pattern

## ltd aggregate data

### Trend

```{r}
#| label: fig-trendagg
#| fig-cap: "Trend of Land Transfer Duty in Victoria over time"
autoplot(ltd_agg_ts, ltd) +
  labs(title = "Land Transfer Duty (ltd) over time")
```

As spotted by @fig-trendagg, the `ltd` increases over time with some significant drops at 08-09s (GFC) and 2020-2021 (Covid-19). There is no clear sign of seasonal or cyclic pattern.

### Seasonal Pattern

```{r}
#| label: fig-ssagg
#| fig-cap: "Seasonal trend of Land Transfer Duty in Victoria"
ltd_agg_ts %>% 
  gg_season(ltd, labels = "both") +
  theme(legend.position = "none") +
  labs( title="Land Transfer Duty in Victoria")
```

Apart from there is a small hint of drop at the start of each quarter, @fig-ssagg shows that there is no clear sign for seasonal pattern

```{r}
#| label: fig-subagg
#| fig-cap: "Subseries plot of Land Transfer Duty in Victoria over time"
ltd_agg_ts %>%
  gg_subseries(ltd) +
  labs(title="Land Transfer Duty in Victoria")
```

However, in the @fig-subagg, the blue lines, indicating the means for each month, disagree with the sign of seasonal pattern spotted from @fig-trendagg.

### Decomposition

```{r}
#| label: fig-dcmp
#| fig-cap: "Decomposition of Land Transfer Duty in Victoria"
dcmp <- ltd_agg_ts |>
  model(stl = STL(ltd))

## Plot all components
components(dcmp) |>
  autoplot()
```

```{r}
#| label: fig-ssadj
#| fig-cap: "Seasonal adjusted Land Transfer Duty in Victoria"
components(dcmp) |>
  as_tsibble() |>
  autoplot(ltd, colour = "gray") +
  geom_line(aes(y=season_adjust), colour = "#0072B2") +
  labs(title = "Seasonal adjusted Land Transfer Duty in Victoria")
```

@fig-dcmp shows that there is no seasonal pattern for `ltd` and the large grey bar in the seasonal panel shows that the variation in the seasonal component is smallest compared to the variation in the data.

Moreover, @fig-dcmp also shows that there is a sign of heterogeneity in `ltd` and thus transformation may needed before model fitting.

Also the @fig-ssadj shows that there is not much difference between seasonally adjusted `ltd` and the original `ltd`, which confirms the lack of seasonal pattern.

### Box-Cox transformation

```{r, eval = F}
lambda <- ltd_agg_ts |>
  features(ltd, features = guerrero) |>
  pull(lambda_guerrero)

ltd_agg_ts |>
  autoplot(box_cox(ltd, lambda)) +
  labs(y = "",
       title = latex2exp::TeX(paste0(
         "Transformed Land Transfer Duty in Victoria with $\\lambda$ = ",
         round(lambda,2))))
```

## ltd unit data

### Loan to Deposit

```{r}
# Unit root test for stationary
ltd_unit_ts %>%
  features(box_cox(ltd, lambda), unitroot_kpss)
```

Value of 0.01 indicates the `ltd` from this data is stationary and thus require differencing the data.

```{r}
#  KPSS tests to determine the appropriate number of first differences
ltd_unit_ts |>
  features(box_cox(ltd, lambda), unitroot_ndiffs)
```

```{r}
ltd_unit_ts |>
  mutate(log_ltd = box_cox(ltd, lambda)) |>
  features(log_ltd, unitroot_nsdiffs)
```

KPSS tests results determine one difference required

```{r}
ltd_unit_ts <- ltd_unit_ts %>%
  mutate(bc_ltd = difference(box_cox(ltd, lambda),1))
```


```{r}
# Create hierarchical time series
ltd_hts <- ltd_unit_ts %>%
  aggregate_key(category / sub_category, bc_ltd = sum(bc_ltd))
```

#### Trend

```{r}
#| label: fig-trendut
#| fig-cap: "Trend of Land Transfer Duty in Victoria among category over time"
ltd_hts |>
  filter(is_aggregated(sub_category)) |>
  autoplot(bc_ltd) +
  labs(y = "Land Transfer Duty",
       title = "Land Transfer Duty in Victoria: total, category") +
  facet_wrap(vars(category), scales = "free_y", ncol = 3) +
  theme(legend.position = "none")
```

@fig-trendut shows the fairly same pattern for both categories and to the total of `ltd`.

```{r}
#| label: fig-ssut
#| fig-cap: "Seasonal trend of Land Transfer Duty among category in Victoria"
ltd_hts |>
  filter(category == "res" |
         category == "nonres",
         is_aggregated(sub_category)) |>
  select(-sub_category) |>
  mutate(category = factor(category, levels=c("res","nonres"))) |>
  gg_season(bc_ltd) +
  facet_wrap(vars(category), nrow = 2, scales = "free_y")+
  labs(y = "Land Transfer Duty")
```

@fig-ssut shows that for residential property, there is a fluctuation during the year and reach its peak at the June and December, while for non-residential property, `ltd` has a high peak in March only.

This pattern shows there is a difference in consumer behaviour for each category of property

```{r}
#| label: fig-catnsub
#| fig-cap: "Land Transfer Duty by category and sub-category"
#| fig-width: 11
#| fig-height: 6
ltd_hts |>
  filter(!is_aggregated(sub_category)) |>
  mutate(sub_category = as.character(sub_category)) |>
  ggplot(aes(x = month, y = bc_ltd
             ,group = sub_category, colour = sub_category
             )) +
  stat_summary(fun = sum, geom = "line") +
  labs(x = "Month",
       y = "Land Transfer Duty",
       title = "Land Transfer Duty in Victoria: category, sub-category") +
  facet_wrap(~as.character(category), scales = "free_y", ncol = 2) 
```

@fig-catnsub

#### Forecasting

```{r}
# Model fitting on filtered data
fit <- ltd_hts |>
  na.omit() |>
  filter(year(month) <= 2021) |>
  model(arima = ARIMA(bc_ltd),
        ets = ETS(bc_ltd)) |>
  reconcile(
    bu_arima = bottom_up(arima),
    bu_ets = bottom_up(ets),
    wls_var_arima = min_trace(arima, method = "wls_var"),
    wls_var_ets = min_trace(ets, method = "wls_var"),
    mint_arima = min_trace(arima, method = "mint_shrink"),
    mint_ets = min_trace(ets, method = "mint_shrink")
  )
```

```{r}
#Forecasting 2 years
fc <- fit |> forecast(h = "2 years")
```

```{r}
#| fig-width: 11
#| fig-height: 6
# Plotting for category
fc |>
  filter(is_aggregated(sub_category)) |>
  autoplot(
    ltd_hts |> filter(year(month) >= 2010),
    level = NULL
  ) +
  labs(y = "Land Transfer Duty") +
  facet_wrap(vars(category), scales = "free_y")
```

```{r}
#| fig-width: 11
#| fig-height: 6
# Plotting for sub-category
fc |>
  filter(!is_aggregated(category)) |>
  autoplot(
    ltd_hts |> filter(year(month) >= 2010),
    level = NULL
  ) +
  labs(x = "Month",
       y = "Land Transfer Duty") +
  facet_wrap(~as.character(sub_category), scales = "free_y", nrow = 3) +
  theme_minimal()
```

```{r}
# Accuracy measures
data.frame(
  fc |>
  filter(is_aggregated(category)) |>
  accuracy(data = ltd_hts,
           measures = list(mase = MASE,
                           ss = skill_score(CRPS)
                           )
           ) |>
  group_by(.model) |>
  summarise(mase = mean(mase), sspc = mean(ss) * 100)) %>%
    rename("Model" = .model)
```

### Average LTD per transaction

```{r}
# Unit root test for stationary
ltd_unit_ts %>%
  features(log(ltd/volume), unitroot_kpss)
```

Value of 0.01 indicates the `ltd` from this data is stationary and thus require differencing the data.

```{r}
#  KPSS tests to determine the appropriate number of first differences
ltd_unit_ts |>
  features(log(ltd/volume), unitroot_ndiffs)
```


```{r}
# Create hierarchical time series
ltd_hts1 <- ltd_unit_ts %>%
  mutate(log_avg_ltd = log(ltd/volume)) %>%
  aggregate_key(category / sub_category, log_avg_ltd = sum(log_avg_ltd)) %>%
  na.omit()
```

#### Trend

```{r}
#| label: fig-trendut1
#| fig-cap: "Trend of Land Transfer Duty volume in Victoria among category over time"
ltd_hts1 |>
  filter(is_aggregated(sub_category)) |>
  autoplot(log_avg_ltd) +
  labs(x = "Month",
       y = "Land Transfer Duty Volume",
       title = "Land Transfer Duty in Victoria: total, category") +
  facet_wrap(vars(category), scales = "free_y", ncol = 3) +
  theme(legend.position = "none")
```

@fig-trendut1 shows the fairly same pattern for both categories and to the total of `volume`.

```{r}
#| label: fig-ssut1
#| fig-cap: "Seasonal trend of Land Transfer Duty volume among category in Victoria"
ltd_hts1 |>
  filter(category == "res" |
         category == "nonres",
         is_aggregated(sub_category)) |>
  select(-sub_category) |>
  mutate(category = factor(category, levels=c("res","nonres"))) |>
  gg_season(log_avg_ltd) +
  facet_wrap(vars(category), nrow = 2, scales = "free_y")+
  labs(x = "Month",
       y = "Land Transfer Duty volume")
```

@fig-ssut1

```{r}
#| label: fig-catnsub1
#| fig-cap: "Land Transfer Duty volume by category and sub-category"
#| fig-width: 11
#| fig-height: 6
ltd_hts1 |>
  filter(!is_aggregated(sub_category)) |>
  mutate(sub_category = as.character(sub_category)) |>
  ggplot(aes(x = month, y = log_avg_ltd
             ,group = sub_category, colour = sub_category
             )) +
  stat_summary(fun = sum, geom = "line") +
  labs(x = "Month",
       y = "Land Transfer Duty",
       title = "Land Transfer Duty in Victoria: category, sub-category") +
  facet_wrap(~as.character(category), scales = "free_y", ncol = 2) 
```

@fig-catnsub1

#### Forecasting

```{r}
# Model fitting on filtered data
fit <- ltd_hts1 |>
  filter(year(month) <= 2021) |>
  model(base = ETS(log_avg_ltd)) |>
  reconcile(
    bu = bottom_up(base),
    wls_var = min_trace(base, method = "wls_var"),
    mint = min_trace(base, method = "mint_shrink")
  )
```

```{r}
#Forecasting2 years
fc <- fit |> forecast(h = "2 years")
```

```{r}
# Plotting for category
#| fig-width: 11
#| fig-height: 6
fc |>
  filter(is_aggregated(sub_category)) |>
  autoplot(
    ltd_hts1 |> filter(year(month) >= 2010),
    level = NULL
  ) +
  labs(x = "Month",
       y = "Land Transfer Duty volume") +
  facet_wrap(vars(category), scales = "free_y")
```

```{r}
# Plotting for sub-category
#| fig-width: 11
#| fig-height: 6
fc |>
  filter(!is_aggregated(category)) |>
  autoplot(
    ltd_hts1 |> filter(year(month) >= 2010),
    level = NULL
  ) +
  labs(x = "Month",
       y = "Land Transfer Duty volume") +
  facet_wrap(~as.character(sub_category), scales = "free_y", nrow = 3) +
  theme_minimal()
```

```{r}
# Accuracy measures
data.frame(fc |>
  filter(is_aggregated(category)) |>
  accuracy(data = ltd_hts1,
           measures = list(mase = MASE,
                           ss = skill_score(CRPS)
                           )
           ) |>
  group_by(.model) |>
  summarise(mase = mean(mase), sspc = mean(ss) * 100)) %>%
  rename("Model" = .model)
```

# Convert data into time series (temporal hierarchical time series)

```{r}
# Assuming ltd_unit_ts is your dataset
ltd_unit_ts_mod <- ltd_unit_ts %>%
  mutate(
    # Extract the month value from the 'month' column
    Month = month(month, label = TRUE, abbr = T),
    # Create a 'semi-annual' column based on the month
    Semi_annual = case_when(
      month(month) >= 1 & month(month) <= 6 ~ "semi-annual 1",
      TRUE ~ "semi-annual 2"
    ),
    # Create a 'quarter' column based on the month
    Quarter = case_when(
      month(month) >= 1 & month(month) <= 3 ~ "quarter 1",
      month(month) >= 4 & month(month) <= 6 ~ "quarter 2",
      month(month) >= 7 & month(month) <= 9 ~ "quarter 3",
      TRUE ~ "quarter 4"
    )
  )

```

## Create temporal hierarchical time series

### ltd

```{r}
ltd_tem <- ltd_unit_ts_mod %>%
  aggregate_key(Semi_annual / Quarter / Month, ltd = sum(ltd))
```

#### Trend

```{r}
ltd_tem %>%
  filter(is_aggregated(Quarter)) |>
  autoplot(ltd) +
  labs(y = "Land Transfer Duty",
       title = "Land Transfer Duty in Victoria: Annually, Semi annually") +
  facet_wrap(vars(Semi_annual), scales = "free_y", ncol = 3) +
  theme(legend.position = "none")
```

```{r}
#| fig-width: 11
#| fig-height: 6
ltd_tem |>
  filter(!is_aggregated(Quarter)) |>
  mutate(Quarter = as.character(Quarter)) |>
  ggplot(aes(x = month, y = ltd
             ,group = Quarter, colour = Quarter
             )) +
  stat_summary(fun = sum, geom = "line") +
  labs(x = "Month",
       y = "Land Transfer Duty",
       title = "Land Transfer Duty in Victoria: Semi-annually, sub-quarterly") +
  facet_wrap(~as.character(Semi_annual), scales = "free_y", ncol = 2) 
```

```{r}
#| fig-width: 11
#| fig-height: 6
ltd_tem |>
  filter(!is_aggregated(Month), !is_aggregated(Quarter)) |>
  mutate(Month = as.character(Month)) |>
  ggplot(aes(x = month, y = ltd
             ,group = Month, colour = Month
             )) +
  stat_summary(fun = sum, geom = "line") +
  labs(x = "Month",
       y = "Land Transfer Duty",
       title = "Land Transfer Duty in Victoria: Quarterly, monthly") +
  facet_wrap(~as.character(Quarter), scales = "free_y", ncol = 2) 
```

```{r}
#| fig-width: 11
#| fig-height: 6
ltd_tem |>
  filter(!is_aggregated(Month), !is_aggregated(Quarter)) |>
  mutate(Month = as.character(Month)) |>
  ggplot(aes(x = month, y = ltd
             ,group = Month, colour = Month
             )) +
  stat_summary(fun = sum, geom = "line") +
  labs(x = "Month",
       y = "Land Transfer Duty",
       title = "Land Transfer Duty in Victoria: Semi-annually, monthly") +
  facet_wrap(~as.character(Semi_annual), scales = "free_y", ncol = 2) 
```

## Forecasting

```{r}

fit <- ltd_hts |>
  filter(year(month) <= 2021) |>
  model(base = ETS(ltd),
        arima = ARIMA(ltd)) 

fc <- fit %>% forecast (h = "2 years")

data.frame(fc |>
  accuracy(data = ltd_hts,
           measures = list(mase = MASE,
                           rmse = RMSE,
                           ss = skill_score(CRPS)
                           )
           ) |>
  group_by(.model) |>
  summarise(mase = mean(mase),rmse = mean(rmse), sspc = mean(ss) * 100)) %>%
  rename("Model" = .model)
```
